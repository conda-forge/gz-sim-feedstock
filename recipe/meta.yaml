{% set component_name = "sim" %}
{% set repo_name = "gz-" + component_name %}
{% set version = "8.6.0" %}
{% set major_version = version.split('.')[0] %}
{% set name = repo_name + major_version %}
{% set component_version = component_name + major_version %}
{% set cxx_name = "lib" + name %}
{% set python_name = name + "-python" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/gazebosim/{{ repo_name }}/archive/refs/tags/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz
    sha256: d709eafd7c919add5fc828e10f6605abaa2aceb6b9609f44e115f204853cf5db
    patches:
      - standalone_bindings.patch
      - support_protobuf_crosscompilation.patch

build:
  number: 0

outputs:
  - name: {{ cxx_name }}
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - pkg-config
        - ninja
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        - pybind11-abi                           # [build_platform != target_platform]
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
        # Used by tests
        - make  # [unix]
        # We need protoc and gz-msg10 in build for cross-compiling
        - libabseil  # [build_platform != target_platform]
        - libprotobuf  # [build_platform != target_platform]
        - libgz-msgs10  # [build_platform != target_platform]
      host:
        - libgz-cmake3
        - libsdformat14
        - libgz-plugin2
        - libgz-transport13
        - libgz-msgs10
        - libgz-common5
        - libgz-fuel-tools9
        - libgz-gui8
        - libgz-physics7 >=7.3.0
        - libgz-sensors8
        - libgz-rendering8 >=8.2.0
        - libgz-utils2
        - libgz-math7
        - libgz-tools2
        - libabseil
        - libprotobuf
        - qt-main
        - tinyxml2
        # ensure python_impl gets picked up by smithy (by using it as a selector) and therefore
        # populated in the .ci_config/*.yaml files, for use in {build,install}-py.{sh,bat}.
        - python  # [python_impl == "cpython"]
        - python  # [python_impl == "pypy"]
        - pybind11
        - pybind11-abi
        - xorg-libxfixes  # [linux]
    test:
      commands:
        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]
        - test -f ${PREFIX}/lib/lib{{ name }}${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/lib{{ name }}-python-system-loader-system${SHLIB_EXT}  # [unix and python_impl != "pypy"]
        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\gz\\{{ component_version }}\\gz\\{{ component_name }}.hh exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}-python-system-loader-system.lib exit 1  # [win and python_impl != "pypy"]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}-python-system-loader-system.dll exit 1  # [win and python_impl != "pypy"]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\{{ name }}\\{{ name }}-config.cmake exit 1  # [win]

  - name: {{ python_name }}
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
        - swig
        - ninja
        - cmake
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        - pybind11-abi                           # [build_platform != target_platform]
        - pytest                                 # [build_platform != target_platform]
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
      host:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - libgz-common5
        - python
        - pybind11
        - pybind11-abi
        - pytest
        # Workaround for wrong pinning
        - libabseil
        - libprotobuf
        - xorg-libxfixes  # [linux]
      run:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - python
    test:
      commands:
        - pip check
      requires:
        - pip
      imports:
        - gz.{{ component_name }}{{ major_version }}

  - name: {{ name }}
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
    requirements:
      run:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - {{ pin_subpackage(python_name, max_pin='x.x.x') }}
    test:
      imports:
        - gz.{{ component_name }}{{ major_version }}

about:
  home: https://github.com/gazebosim/gz-sim
  license: Apache-2.0
  license_file: LICENSE
  summary: "Open source robotics simulator. The latest version of Gazebo."

extra:
  feedstock-name: {{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - Tobias-Fischer
